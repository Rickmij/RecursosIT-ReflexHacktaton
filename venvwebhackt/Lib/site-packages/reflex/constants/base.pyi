"""Stub file for reflex/constants/base.py"""
# ------------------- DO NOT EDIT ----------------------
# This file was generated by `reflex/utils/pyi_generator.py`!
# ------------------------------------------------------

from typing import Any, Dict, Literal, Optional, Union, overload
from reflex.vars import Var, BaseVar, ComputedVar
from reflex.event import EventChain, EventHandler, EventSpec
from reflex.style import Style
import os
import platform
from enum import Enum
from importlib import metadata
from types import SimpleNamespace
from platformdirs import PlatformDirs

IS_WINDOWS = platform.system() == "Windows"

class Dirs(SimpleNamespace):
    WEB = ".web"
    APP_ASSETS = "assets"
    UTILS = "utils"
    STATIC = "_static"
    STATE_PATH = "/".join([UTILS, "state"])
    COMPONENTS_PATH = "/".join([UTILS, "components"])
    CONTEXTS_PATH = "/".join([UTILS, "context"])
    WEB_PAGES = os.path.join(WEB, "pages")
    WEB_STATIC = os.path.join(WEB, STATIC)
    WEB_UTILS = os.path.join(WEB, UTILS)
    WEB_ASSETS = os.path.join(WEB, "public")
    ENV_JSON = os.path.join(WEB, "env.json")
    REFLEX_JSON = os.path.join(WEB, "reflex.json")
    POSTCSS_JS = os.path.join(WEB, "postcss.config.js")

class Reflex(SimpleNamespace):
    MODULE_NAME = "reflex"
    VERSION = metadata.version(MODULE_NAME)
    JSON = os.path.join(Dirs.WEB, "reflex.json")
    _dir = os.environ.get("REFLEX_DIR", "")
    DIR = _dir or PlatformDirs(MODULE_NAME, False).user_data_dir
    ROOT_DIR = os.path.dirname(
        os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
    )

class ReflexHostingCLI(SimpleNamespace):
    MODULE_NAME = "reflex-hosting-cli"

class Templates(SimpleNamespace):
    APP_TEMPLATES_ROUTE = "/app-templates"
    DEFAULT = "blank"

    class Dirs(SimpleNamespace):
        BASE = os.path.join(Reflex.ROOT_DIR, Reflex.MODULE_NAME, ".templates")
        WEB_TEMPLATE = os.path.join(BASE, "web")
        JINJA_TEMPLATE = os.path.join(BASE, "jinja")
        CODE = "code"

class Next(SimpleNamespace):
    CONFIG_FILE = "next.config.js"
    SITEMAP_CONFIG_FILE = os.path.join(Dirs.WEB, "next-sitemap.config.js")
    NODE_MODULES = "node_modules"
    PACKAGE_LOCK = "package-lock.json"
    FRONTEND_LISTENING_REGEX = "Local:[\\s]+(.*)"

class ColorMode(SimpleNamespace):
    NAME = "colorMode"
    USE = "useColorMode"
    TOGGLE = "toggleColorMode"

class Env(str, Enum):
    DEV = "dev"
    PROD = "prod"

class LogLevel(str, Enum):
    DEBUG = "debug"
    INFO = "info"
    WARNING = "warning"
    ERROR = "error"
    CRITICAL = "critical"

POLLING_MAX_HTTP_BUFFER_SIZE = 1000 * 1000

class Ping(SimpleNamespace):
    INTERVAL = 25
    TIMEOUT = 120

COOKIES = "cookies"
LOCAL_STORAGE = "local_storage"
SKIP_COMPILE_ENV_VAR = "__REFLEX_SKIP_COMPILE"
ENV_MODE_ENV_VAR = "REFLEX_ENV_MODE"
PYTEST_CURRENT_TEST = "PYTEST_CURRENT_TEST"
RELOAD_CONFIG = "__REFLEX_RELOAD_CONFIG"
REFLEX_VAR_OPENING_TAG = "<reflex.Var>"
REFLEX_VAR_CLOSING_TAG = "</reflex.Var>"
